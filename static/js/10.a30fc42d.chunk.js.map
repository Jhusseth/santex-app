{"version":3,"sources":["pages/ShoppingCart.js"],"names":["ShoppingCart","useAuth","authState","removeProductCartItem","setOrders","removeAllProductsCartItems","useState","redirect","setRedirect","totalValue","setTotalValue","useEffect","total","productsCart","length","forEach","product","price","calculateTotal","handleClick","id","swalWithBootstrapButtons","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","find","p","_id","reducePrice","dismiss","DismissReason","cancel","handleBuy","a","userInfo","identification","orderProducts","map","orders","client","products","publicFetch","post","data","position","message","showConfirmButton","timer","to","className","key","src","image","alt","name","owner","aria-hidden","onClick","faMinusCircle"],"mappings":"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","file":"static/js/10.a30fc42d.chunk.js","sourcesContent":["import React, {useState, useEffect } from \"react\";\nimport {useAuth } from \"../context/AuthContext\";\nimport Card from \"../components/common/Card\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"../components/common/GradientButton\";\nimport GradientBar from \"../components/common/GradientBar\";\nimport { publicFetch } from \"../util/fetch\";\nimport { Redirect } from \"react-router-dom\";\nimport Swal from 'sweetalert2'\n\nexport default function ShoppingCart() {\n  const {\n    authState,\n    removeProductCartItem,\n    setOrders,\n    removeAllProductsCartItems,\n  } = useAuth();\n  const [redirect, setRedirect] = useState(false);\n\n  const [totalValue, setTotalValue] = useState(0);\n\n  useEffect(() => {\n    const calculateTotal = () => {\n      let total = 0;\n      if (authState.productsCart && authState.productsCart.length) {\n        authState.productsCart.forEach((product) => (total += product.price));\n      }\n\n      setTotalValue(total);\n    };\n\n    calculateTotal();\n  }, []);\n  const reducePrice = (id) => {\n    if (authState.productsCart && authState.productsCart.length) {\n      const product = authState.productsCart.find((p) => p._id === id);\n      if (product) {\n        setTotalValue((total) => total - product.price);\n      }\n    }\n  };\n\n  const handleClick = (id) => {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded ml-3',\n        cancelButton: 'bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded'\n      },\n      buttonsStyling: false\n    })\n    \n    swalWithBootstrapButtons.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete!',\n      cancelButtonText: 'No, cancel!',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.isConfirmed) {\n        swalWithBootstrapButtons.fire(\n          'Deleted!',\n          'Your product has been deleted.',\n          'success'\n        )\n        removeProductCartItem(id);\n        reducePrice(id);\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelled',\n          'Your product is safe :)',\n          'error'\n        )\n      }\n    })\n\n\n  };\n  const handleBuy = async () => {\n    if (\n      authState.userInfo &&\n      authState.userInfo &&\n      authState.userInfo.identification\n    ) {\n      const orderProducts = [...authState.productsCart].map((p) => p._id);\n      const orders = {\n        client: authState.userInfo.identification,\n        products: orderProducts,\n      };\n\n      const { data } = await publicFetch.post(`clients/order`, orders);\n\n      Swal.fire({\n        position: 'top-center',\n        icon: 'success',\n        title: data.message,\n        showConfirmButton: false,\n        timer: 1500\n      })\n      setOrders({\n        client: authState.userInfo.identification,\n        products: [...authState.productsCart],\n      });\n      removeAllProductsCartItems();\n      setRedirect(true);\n    }\n  };\n\n  return (\n    <>\n      {redirect ? <Redirect to=\"/orders\" /> : null}\n      <div className=\"sm:w-3/4 h-auto m-auto sm:pt-3  mt-10 shadow-xl\">\n        <GradientBar />\n        <Card>\n          <h1 className=\"text-2xl font-nucleo\">Shopping Cart</h1>\n          <div className=\"flex flex-col mt-10 justify-center text-center items-center\">\n            <div className=\"flex flex-col\">\n              {authState.productsCart && authState.productsCart.length\n                ? authState.productsCart.map((product) => (\n                    <div className=\"border mb-3\" key={product._id}>\n                      <Card>\n                        <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-2 xl:grid-cols-4 text-center justify-between items-center\">\n                          <div className=\"flex justify-center item-center text-center\">\n                            <img\n                              src={product.image}\n                              className=\"w-16 h-16 \"\n                              alt=\"\"\n                            />\n                          </div>\n                          <div className=\"float-left mr-auto\">\n                            <h1 className=\"text-md\">{product.name}</h1>\n                            <p className=\"text-sm text-gray-900\">\n                              {\" \"}\n                              {product.owner}{\" \"}\n                            </p>\n                          </div>\n                          <div className=\"float-right md:ml-10\">\n                            <span className=\"relative inline-block px-3 py-1 font-semibold text-gray-900 leading-tight text-center\">\n                              <span\n                                aria-hidden=\"true\"\n                                className=\"absolute inset-0 bg-blue-200 opacity-50 rounded-full text-center\"\n                              ></span>\n                              <span className=\"relative text-center\">\n                                <p className=\"text-md font-semibold\">\n                                  ${product.price}\n                                </p>\n                              </span>\n                            </span>\n                          </div>\n                          <div className=\"float-right ml-auto text-center justify-between items-center pr-4\">\n                            <button\n                              className=\"text-red-700 text-lg\"\n                              onClick={() => {\n                                handleClick(product._id);\n                              }}\n                            >\n                              <FontAwesomeIcon icon={faMinusCircle} />\n                            </button>\n                          </div>\n                        </div>\n                      </Card>\n                    </div>\n                  ))\n                : null}\n            </div>\n            <hr className=\"h-1 w-full text-gray-900 bg-gray-200 mt-10\" />\n            <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-2 xl:grid-cols-2\">\n              <div className=\"float-left mr-auto\">\n                <h1 className=\"text-md font-serif font-bold\">Total Value:</h1>\n              </div>\n              <div className=\"float-right ml-auto font-nucleo\">\n                <h1 className=\"text-md\">$ {totalValue}</h1>\n              </div>\n            </div>\n            <div className=\"mt-10\">\n              {authState.productsCart && authState.productsCart.length?\n              <Button\n                text=\"Make an Order\"\n                onClick={handleBuy}\n              />:null}\n            </div>\n          </div>\n        </Card>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}