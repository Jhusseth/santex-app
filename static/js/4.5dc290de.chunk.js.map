{"version":3,"sources":["components/common/PageTitle.js","components/common/Alert.js","components/admin/AddAdmin.js","components/admin/EditAdmin.js","components/admin/TableAdmin.js","pages/Admin.js"],"names":["PageTitle","title","className","Alert","text","close","onClick","AddCampus","props","AddSchema","Yup","shape","firstName","required","lastName","identification","birthDate","email","password","useState","addAdminSuccess","setAddAdminSuccess","addAdminError","setAddAdminError","redirectAdmin","setRedirectOnAdmin","addAdmin","setAdmin","submitCredentials","credentials","a","publicFetch","post","data","message","setTimeout","response","showAddPanel","window","location","reload","GradientBar","Card","initialValues","onSubmit","values","validationSchema","FormSuccess","FormError","type","name","value","Label","FormInput","ariaLabel","placeholder","GradientButton","loading","Modal","EditSchema","editAdmin","setEditAdmin","submitCampus","put","admin","setShowModal","closeModal","showModal","split","TableAdmin","mResponse","setMResponse","show","setShow","deleteAdmin","id","delete","scope","admins","map","key","_id","edit","icon","faEdit","faTrashAlt","Campus","showAdd","setShowAdd","setAdmins","useEffect","get","listCampuses","style","display","showPanel"],"mappings":"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","file":"static/js/4.5dc290de.chunk.js","sourcesContent":["import React from 'react';\n\nconst PageTitle = ({ title }) => (\n  <div className=\"my-1 sm:my-4\">\n    <h2 className=\"text-gray-800 font-bold text-2xl font-nucleo\">\n      {title}\n    </h2>\n  </div>\n);\n\nexport default PageTitle;\n","import React from 'react'\n\nexport default function Alert({text, close}) {\n    return (\n        <>\n            <div className=\"text-white px-6 py-4 border-0 rounded relative mb-4 bg-teal-500\">\n                <span className=\"text-xl inline-block mr-5 align-middle\">\n                    <i className=\"fas fa-bell\" />\n                </span>\n                <span className=\"inline-block align-middle mr-8\">\n                    <b className=\"capitalize\">{text}</b>\n                </span>\n                <button className=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-6 outline-none focus:outline-none\" onClick={close} >\n                    <span>Ã—</span>\n                </button>\n            </div>\n        </>\n    )\n}\n","import React,{ useState } from 'react'\nimport GradientBar from '../common/GradientBar';\nimport Card from '../common/Card';\nimport { Form, Formik} from 'formik';\nimport FormSuccess from '../FormSuccess'\nimport FormError from '../common/FormError'\nimport FormInput from '../FormInput'\nimport Label from '../common/Label';\nimport GradientButton from '../common/GradientButton';\nimport * as Yup from 'yup';\nimport { publicFetch } from '../../util/fetch';\n\nexport default function AddCampus(props) {\n\n\n    const AddSchema = Yup.object().shape({\n        firstName: Yup.string().required('First name is required'),\n        lastName: Yup.string().required('Last name is required'),\n        identification: Yup.string().required('Id is required'),\n        birthDate: Yup.string().required('BirthDate is required'),\n        email: Yup.string()\n            .email('Invalid email')\n            .required('Email is required'),\n        password: Yup.string().required('Password is required')\n    });\n\n    const [addAdminSuccess, setAddAdminSuccess] = useState();\n    const [addAdminError, setAddAdminError] = useState();\n    const [redirectAdmin, setRedirectOnAdmin] = useState(false)\n    \n    \n    const [addAdmin, setAdmin] = useState(false);\n    \n    const submitCredentials = async credentials => {\n        try {\n            setAdmin(true);\n            const { data } = await publicFetch.post(\n                `admins`,\n                credentials\n            );\n    \n        setAddAdminSuccess(data.message);\n        setAddAdminError('');\n    \n        setTimeout(() => {\n            setRedirectOnAdmin(true);\n        }, 50);\n\n        }\n        catch (error) {\n            setAdmin(false);\n            const { data } = error.response;\n            setAddAdminError(data.message);\n            setAddAdminSuccess('');\n        }\n        finally{\n            props.showAddPanel()\n            window.location.reload();\n        }\n        \n    };\n    return (\n        <>\n            {redirectAdmin && window.location.reload()}\n            <section className=\"w-4/5 h-screen m-auto sm:pt-10\">\n                <GradientBar />\n                <Card>\n                    <div className=\"flex items-center justify-center py-7 px-2 sm:px-3 lg:px-3\">\n                        <div className=\"max-w-md w-full flex items-center justify-center\">\n                            <Formik\n                                initialValues={{\n                                    firstName: '',\n                                    lastName: '',\n                                    identification: '',\n                                    birthDate: '',\n                                    email: '',\n                                    password: ''\n                                }}\n                                onSubmit={values =>\n                                submitCredentials(values)\n                                }\n                                validationSchema={AddSchema}\n                            >\n                                {({values}) => (\n                                <Form className=\"mt-8\">\n                                    {addAdminSuccess && (\n                                    <FormSuccess text={addAdminSuccess} />\n                                    )}\n                                    {addAdminError && (\n                                    <FormError text={addAdminError} />\n                                    )}\n                                    <input\n                                    type=\"hidden\"\n                                    name=\"remember\"\n                                    value=\"true\"\n                                    />\n                                    <div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-1/2\">\n                                                <div className=\"mb-1\">\n                                                <Label text=\"First Name\" />\n                                                </div>\n                                                <FormInput\n                                                ariaLabel=\"First Name\"\n                                                name=\"firstName\"\n                                                type=\"text\"\n                                                placeholder=\"First Name\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2 \">\n                                                <div className=\"mb-1\">\n                                                <Label text=\"Last Name\" />\n                                                </div>\n                                                <FormInput\n                                                ariaLabel=\"Last Name\"\n                                                name=\"lastName\"\n                                                type=\"text\"\n                                                placeholder=\"Last Name\"\n                                                />\n                                            </div>\n                                            </div>\n                                            <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-1/2\">\n                                                <div className=\"mb-1\">\n                                                <Label text=\"Identification\" />\n                                                </div>\n                                                <FormInput\n                                                ariaLabel=\"Identification\"\n                                                name=\"identification\"\n                                                type=\"number\"\n                                                placeholder=\"Identification\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2 \">\n                                                <div className=\"mb-1\">\n                                                <Label text=\"BirthDate\" />\n                                                </div>\n                                                <FormInput\n                                                ariaLabel=\"BirthDate\"\n                                                name=\"birthDate\"\n                                                type=\"Date\"\n                                                placeholder=\"BirthDate\"\n                                                />\n                                            </div>\n                                            </div>\n                                            <div className=\"mb-2\">\n                                            <div className=\"mb-1\">\n                                                <Label text=\"Email address\" />\n                                            </div>\n                                            <FormInput\n                                                ariaLabel=\"Email address\"\n                                                name=\"email\"\n                                                type=\"email\"\n                                                placeholder=\"Email address\"\n                                            />\n                                            </div>\n                                            <div>\n                                            <div className=\"mb-1\">\n                                                <Label text=\"Password\" />\n                                            </div>\n                                            <FormInput\n                                                ariaLabel=\"Password\"\n                                                name=\"password\"\n                                                type=\"password\"\n                                                placeholder=\"Password\"\n                                            />\n                                            </div>\n                                        </div>\n                                    <div className=\"mt-6 flex items-center justify-center font-nucleo\">\n                                    <GradientButton\n                                        type=\"submit\"\n                                        text=\"Save\"\n                                        loading={addAdmin}\n                                    />\n                                    </div>\n                                </Form>\n                                )}\n                            </Formik>\n                        </div>\n                    </div>\n                </Card>\n            </section>\n        </>\n    );\n};\n","import React,{useState} from \"react\";\nimport GradientBar from '../common/GradientBar';\nimport Card from '../common/Card';\nimport { Form, Formik} from 'formik';\nimport FormSuccess from '../FormSuccess'\nimport FormError from '../common/FormError'\nimport FormInput from '../FormInput'\nimport Label from '../common/Label';\nimport GradientButton from '../common/GradientButton';\nimport * as Yup from 'yup';\nimport { publicFetch } from '../../util/fetch';\n\nexport default function Modal(props) {\n  const EditSchema = Yup.object().shape({\n        firstName: Yup.string().required('First name is required'),\n        lastName: Yup.string().required('Last name is required'),\n        identification: Yup.string().required('Id is required'),\n        birthDate: Yup.string().required('BirthDate is required'), \n    });\n    const [addAdminSuccess, setAddAdminSuccess] = useState();\n    const [addAdminError, setAddAdminError] = useState();\n    \n    \n    const [editAdmin, setEditAdmin] = useState(false);\n    \n    const submitCampus = async values => {\n        try {\n            setEditAdmin(true);\n            const { data } = await publicFetch.put(\n                `admins/${props.admin.identification}`,\n                values\n            );\n\n    \n            setAddAdminSuccess(data.message);\n            setAddAdminError('');\n\n        }\n        catch (error) {\n            setEditAdmin(false);\n            const { data } = error.response;\n            setAddAdminError(data.message);\n            setAddAdminSuccess('');\n        }\n        finally{\n            setTimeout(() => {\n                props.setShowModal(false)\n                window.location.reload();\n            }, 1000);\n        }\n\n    };\n\n    function closeModal () {\n        props.setShowModal(false)\n    }\n    return (\n    <>\n      {props.showModal ? (\n        <>\n            <section className=\"w-3/4 h-screen m-auto sm:pt-10\">\n                <GradientBar />\n                <Card>\n                    <div className=\"flex items-center justify-center py-7 px-2 sm:px-3 lg:px-3\">\n                        <div className=\"max-w-md w-full flex items-center justify-center\">\n                            <Formik\n                                initialValues={{\n                                    identification: props.admin.identification,\n                                    firstName: props.admin.firstName,\n                                    lastName: props.admin.lastName,\n                                    birthDate: props.admin.birthDate.split('T')[0],\n                                }}\n                                onSubmit={values =>\n                                submitCampus(values)\n                                }\n                                validationSchema={EditSchema}\n                            >\n                                {({values}) => (\n                                <Form className=\"mt-8\">\n                                    {addAdminSuccess && (\n                                    <FormSuccess text={addAdminSuccess} />\n                                    )}\n                                    {addAdminError && (\n                                    <FormError text={addAdminError} />\n                                    )}\n                                    <input\n                                    type=\"hidden\"\n                                    name=\"remember\"\n                                    value=\"true\"\n                                    />\n                                    <div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-1/2\">\n                                                <div className=\"mb-1\">\n                                                <Label text=\"First Name\" />\n                                                </div>\n                                                <FormInput\n                                                ariaLabel=\"First Name\"\n                                                name=\"firstName\"\n                                                type=\"text\"\n                                                placeholder=\"First Name\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2 \">\n                                                <div className=\"mb-1\">\n                                                <Label text=\"Last Name\" />\n                                                </div>\n                                                <FormInput\n                                                ariaLabel=\"Last Name\"\n                                                name=\"lastName\"\n                                                type=\"text\"\n                                                placeholder=\"Last Name\"\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-1/2\">\n                                                <div className=\"mb-1\">\n                                                <Label text=\"Identification\" />\n                                                </div>\n                                                <FormInput\n                                                ariaLabel=\"Identification\"\n                                                name=\"identification\"\n                                                type=\"number\"\n                                                placeholder=\"Identification\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2 \">\n                                                <div className=\"mb-1\">\n                                                <Label text=\"BirthDate\" />\n                                                </div>\n                                                <FormInput\n                                                ariaLabel=\"BirthDate\"\n                                                name=\"birthDate\"\n                                                type=\"Date\"\n                                                placeholder=\"BirthDate\"\n                                                />\n                                            </div>\n                                         </div>                                      \n                                    </div>\n                                    <div className=\"mt-6 flex items-center justify-center font-nucleo\">\n                                        <GradientButton\n                                            type=\"submit\"\n                                            text=\"Save\"\n                                            loading={editAdmin}\n                                        />\n                                        <div className=\"ml-6\">\n                                            <GradientButton\n                                                text=\"Close\"\n                                                onClick={closeModal}\n                                            />\n                                        </div>\n                                    </div>\n                                </Form>\n                                )}\n                            </Formik>\n                        </div>\n                    </div>\n                </Card>\n            </section>\n        </>\n      ) : null}\n    </>\n  );\n}","import React,{useState} from 'react'\nimport Card from '../common/Card';\nimport GradientBar from '../common/GradientBar';\nimport { publicFetch } from '../../util/fetch';\nimport Alert from '../common/Alert'\nimport EditAdmin from './EditAdmin'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default function TableAdmin(props) {\n\n    const [mResponse, setMResponse] = useState();\n    const [show, setShow] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [admin, setAdmin] = useState();\n\n    const deleteAdmin = async (id)=>{\n        try {\n            const { data } = await publicFetch.delete(\n            `admins/${id}` \n            );\n                \n            setMResponse(data.message)\n            setShow(true)\n        }\n        catch (error) {\n            const { data } = error.response;\n            setMResponse(data.message)\n            setShow(true)\n        }\n\n        setTimeout(() => {\n            window.location.reload()\n        }, 500);\n    }\n\n    const close = ()=>{\n        setShow(false)\n    }\n\n    const edit = (admin)=>{\n        setAdmin(admin)\n        setShowModal(true)\n    }\n\n    return (\n        <>\n            {showModal?<EditAdmin setShowModal={setShowModal} admin={admin} showModal={setShowModal}/>:<>\n            <GradientBar />\n            <Card>\n                {show?<Alert text={mResponse} close={close}/>:null}\n                <div className=\"inline-block min-w-full rounded-lg overflow-hidden\">\n                    <table className=\"min-w-full leading-normal\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal font-nucleo\">\n                                    id\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal font-nucleo\">\n                                    firstname\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal font-nucleo\">\n                                    lastname\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal font-nucleo\">\n                                    birthdate\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal font-nucleo\">\n                                    edit\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal font-nucleo\">\n                                    delete\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.admins.map((admin) => (\n                                <tr key={admin._id}>\n                                    <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <div className=\"flex items-center justify-center\">\n                                            <div className=\"ml-3\">\n                                                <p className=\"text-gray-900 whitespace-no-wrap font-serif\">\n                                                    {admin.identification}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </td>\n                                    <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm text-center\">\n                                        <div className=\"flex items-center justify-center\">\n                                            <div className=\"ml-3\">\n                                                <p className=\"text-gray-900 whitespace-no-wrap font-serif\">\n                                                    {admin.firstName}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </td>\n                                    <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm text-center\">\n                                        <div className=\"flex items-center justify-center\">\n                                            <div className=\"ml-3\">\n                                                <p className=\"text-gray-900 whitespace-no-wrap font-serif\">\n                                                    {admin.lastName}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </td>\n                                    <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <div className=\"flex items-center justify-center\">\n                                            <div className=\"ml-3\">\n                                                <p className=\"text-gray-900 whitespace-no-wrap font-serif\">\n                                                    {admin.birthDate.split('T')[0]}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </td>\n                                    <td className=\"px-0 py-5 border-b border-gray-200  text-sm items-center\">\n                                        <div className=\"flex justify-center\">\n                                            <button className=\"rounded-full shadow flex items-center px-3 py-3\" onClick={()=>edit(admin)}>\n                                                <FontAwesomeIcon icon={faEdit} />\n                                            </button>\n                                        </div>\n                                    </td>\n                                    <td className=\"px-0 py-5 border-b border-gray-200 text-sm items-center\">\n                                        <div className=\"flex justify-center\">\n                                            <button className=\"rounded-full shadow hover:text-indigo-900 flex items-center px-3 py-3\" onClick={()=>deleteAdmin(admin.identification)}>\n                                                <FontAwesomeIcon icon={faTrashAlt} />\n                                            </button>\n                                        </div>\n                                    </td>\n                                </tr>\n                             ))}\n                        </tbody>\n                    </table>\n                </div>\n            </Card></>}\n        </>\n    )\n}\n","import React , {useState, useEffect} from 'react'\nimport Button from '../components/common/GradientButton'\nimport AddAdmin from '../components/admin/AddAdmin'\nimport TableAdmin from '../components/admin/TableAdmin'\nimport PageTitle from '../components/common/PageTitle';\nimport { publicFetch } from '../util/fetch';\n\nexport default function Campus() {\n\n    const [showAdd, setShowAdd] = useState(false);\n    const [admins, setAdmins ]=  useState([])\n\n    \n    useEffect(() => { \n        const listCampuses = async () => {\n            const {data} = await publicFetch.get(\n                `admins`\n            )\n    \n            setAdmins(data.admins)\n        }\n\n        listCampuses()\n    },[])\n\n    const showAddPanel =()=>{\n        setShowAdd(!showAdd)\n    }\n\n    return (\n        <>\n            <div className=\"container mx-auto px-4\">\n                <PageTitle title=\"Administrators\" />\n                <div className=\"py-5\">\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div>\n                            <TableAdmin admins={admins} />\n                        </div>\n                        <div className=\"container-add font-nucleo\">\n                            <Button text=\"Add > \" onClick={showAddPanel}/>\n                        </div>\n                        <div style={{display: `${showAdd ? 'block' : 'none'}`}}>\n                            <AddAdmin showPanel={showAddPanel}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n"],"sourceRoot":""}